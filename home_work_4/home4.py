
# ========================================= start ============================================

# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 списка. 1 строка - первый список через пробел. 2 строка - второй список через пробел.

# firstList = list(map(int, input().split()))
# secondList = list(map(int, input().split()))
# resList = sorted(set(firstList).intersection(set(secondList)))
# print(firstList)
# print(secondList)
# print(resList)

# ========================================= end ============================================


# ========================================= start ============================================

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном списке содержащим количество ягод на кустах.
# Input: 2 2 1 3 2
# Output: 7

# list_ = [2, 2, 1, 3, 2]
# list_res = []
# sum_max = 0
# for i in range(len(list_)):
#     if i == len(list_)-1:
#         sum_max = list_[i-1]+list_[i]+list_[0]
#     else:
#         sum_max = list_[i-1]+list_[i]+list_[i+1]
#     list_res.append(sum_max)
# print(f"max = {max(list_res)}")


# ========================================= end ============================================
